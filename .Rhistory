}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
for (i in 1:4){
for (j in 1:3){
w[j] <- w[j]+0.01*new_input[i,j]*tkf[i]
}
cat('\n row:', i, w)
}
step <- function(x){ifelse(x>0, 1, 0)}
step(-0.1)
step(1.4)
x <- seq(-5, 5, 0.01)
x
plot(x, step(x), col='blue', type='o')
sigmoid <- function(x){1/(1+exp(-x))}
sigmoid <- function(x){1 / (1+exp(-x))}
sigmoid(3)
x <- seq(-5, 5, 0.01)
plot(x, sigmoid(x), col='blue')
plot(x, sigmoid(x), col='blue')
setwd("/Users/macbook/Documents/itwill/R")
setwd("/Users/macbook/Documents/itwill/R")
concrete <- read.csv("concrete.csv")
str(concrete)
normalize <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
install.packages("neuralnet")
library(neuralnet)
concrete_train <- concrete_norm[1:773, ]
concrete_test <- concrete_norm[774:1030, ]
